# takes in the input string of any length
#return number of moves it takes for all the numbers to be the same
# a move is when all but one number increment up 1
#  [1,2,3,4] -> [2,3,4,4] -> [3,4,4,5] -> [4,5,5,5] -> [5,6,6,5] -> [6,7,6,6] -> [7,7,7,7]-6
#  1*4 = 4
# [1,2,3,4]->[1,2,3,3]->[1,2,3,2]->[1,2,2,2]->[1,1,2,2]->[1,1,1,2]->[1,1,1,1]-6
# 4-1+3-1+2-1=6
# [1,2,3,3] -> [2,3,4,3] -> [3,4,4,4]->[4,5,5,4]->[5,5,6,5]->[6,6,6,6] -5
# [1,2,3,3]->[1,2,2,3]->[1,2,2,2]->[1,1,2,2]->[1,1,1,2]->[1,1,1,1] -5
# 3-1+3-1+2-1 =
# [2,7,4,8,1,1] -> [3,8,5,8,2,2] -> [4,9,6,8,3,3] -> [5,9,7,9,4,4] 
# -> [6,10,8,9,5,5] -> [7,10,9,10,6,6] -> [8,10,10,11,7,7] -> [9,11,11,11,8,8]
# -> [10,11,12,12,9,9] -> [11,12,12,13,10,10] -> [12,13,13,13,11,11] 
# ->[13,14,14,13,12,12] -> [14,14,15,14,13,13] -> [15,15,15,15,14,14]
# ->[15,16,16,16,15,15]->[16,16,17,17,16,16]->[17,17,17,18,17,17]
# ->[18,18,18,18,18,18] -17

# [1,2,2,5]->[2,3,3,5]->[3,4,4,5]->[4,5,5,5]->[5,5,6,6]->[6,6,6,7]->[7,7,7,7]-6

# subtract the min from each value and then sum

def find_num_moves(numbers):
    num_moves = 0
    for num in numbers:
        if num != min(numbers):
            num_moves += (num-min(numbers))

    return num_moves
print(find_num_moves([1,2,3,3]))